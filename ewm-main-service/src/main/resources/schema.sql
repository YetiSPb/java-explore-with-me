DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS compilatios CASCADE;
DROP TABLE IF EXISTS compilatios_events CASCADE;
DROP TABLE IF EXISTS dislikes CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS ratings CASCADE;
DROP TABLE IF EXISTS dislikes_events CASCADE;
DROP TABLE IF EXISTS dislikes_users CASCADE;
DROP TABLE IF EXISTS likes_events CASCADE;
DROP TABLE IF EXISTS likes_users CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email VARCHAR(254)                            NOT NULL,
    name  VARCHAR(250)                            NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50)                              NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT uq_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat DECIMAL                                 NOT NULL,
    lon DECIMAL                                 NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN                                 NOT NULL,
    title  VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS dislikes
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    CONSTRAINT pk_dislikes PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS likes
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    CONSTRAINT pk_likes PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         VARCHAR(2000)                           NOT NULL,
    initiator_id       BIGINT                                  NOT NULL,
    category_id        INTEGER                                 NOT NULL,
    description        VARCHAR(7000)                           NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    location_id        BIGINT                                  NOT NULL,
    paid               BOOLEAN,
    participant_limit  INTEGER,
    request_moderation BOOLEAN,
    title              VARCHAR(120)                            NOT NULL,
    created_on         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    state              VARCHAR(60)                             NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT fk_event_to_category FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_event_to_location FOREIGN KEY (location_id) REFERENCES locations (id),
    CONSTRAINT fk_event_to_user FOREIGN KEY (initiator_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS ratings
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id    BIGINT,
    user_id     BIGINT,
    event_stars DECIMAL(5, 2) DEFAULT 0.00,
    user_stars  DECIMAL(5, 2) DEFAULT 0.00,
    CONSTRAINT pk_ratings PRIMARY KEY (id),
    CONSTRAINT fk_ratings_to_events FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_ratings_to_users FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS dislikes_users
(
    dislike_id BIGINT NOT NULL,
    user_id    BIGINT NOT NULL,
    CONSTRAINT fk_users_to_dislikes FOREIGN KEY (dislike_id) REFERENCES dislikes (id),
    CONSTRAINT fk_dislikes_to_users FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS dislikes_events
(
    dislike_id BIGINT NOT NULL,
    event_id   BIGINT NOT NULL,
    CONSTRAINT fk_events_to_dislikes FOREIGN KEY (dislike_id) REFERENCES dislikes (id),
    CONSTRAINT fk_dislikes_to_events FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS likes_users
(
    like_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT fk_users_to_likes FOREIGN KEY (like_id) REFERENCES likes (id),
    CONSTRAINT fk_likes_to_users FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS likes_events
(
    like_id  BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    CONSTRAINT fk_events_to_likes FOREIGN KEY (like_id) REFERENCES likes (id),
    CONSTRAINT fk_likes_to_events FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    event_id     BIGINT                                  NOT NULL,
    requester_id BIGINT                                  NOT NULL,
    status       VARCHAR(60),
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT fk_request_to_event FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_request_to_user FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    CONSTRAINT fk_compilation_to_event FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_event_to_compilation FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE
);

